<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>üé≤ Cute Number Guessing Game üéØ</title>
    <style>
        /* Cute pastel gradient background */
        body {
            background: linear-gradient(135deg, #ffdde1, #ee9ca7, #ffdde1);
            color: #fff;
            font-family: 'Poppins', sans-serif;
            text-align: center;
            height: 100vh;
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
            overflow: hidden;
        }

        /* Floating heart/stars animation */
        @keyframes floatUp {
            0% { transform: translateY(0); opacity: 1; }
            100% { transform: translateY(-120vh); opacity: 0; }
        }

        /* Wrapper box */
        #wrapper {
            padding: 20px;
            border-radius: 15px;
            background: rgba(0, 0, 0, 0.6);
            box-shadow: 0px 0px 20px rgba(255, 255, 255, 0.5);
            width: 80%;
            max-width: 500px;
            text-align: center;
        }

        h1 {
            color: #ffeb3b;
            text-shadow: 2px 2px 10px rgba(255, 255, 255, 0.8);
        }

        button {
            padding: 12px 20px;
            margin: 10px;
            font-size: 18px;
            color: #fff;
            background: linear-gradient(90deg, #ff512f, #dd2476);
            border: none;
            border-radius: 10px;
            cursor: pointer;
            box-shadow: 0px 5px 15px rgba(255, 105, 135, 0.6);
            transition: 0.3s;
        }

        button:hover {
            transform: scale(1.1);
        }

        #newGame {
            padding: 10px 20px;
            background: #4CAF50;
            color: #fff;
            border-radius: 10px;
            cursor: pointer;
            display: inline-block;
            box-shadow: 0px 5px 15px rgba(76, 175, 80, 0.6);
            transition: 0.3s;
        }

        #newGame:hover {
            transform: scale(1.1);
        }

        .floating-elements {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            pointer-events: none;
            overflow: hidden;
        }
    </style>
</head>
<body>
    <!-- Floating Elements Container -->
    <div class="floating-elements"></div>

    <div id="wrapper">
        <h1>üé≤ Number Guessing Game üéØ</h1>
        <p>Try and guess a random number between 1 and 100.</p>
        <p>You have 10 attempts to guess the right number.</p>

        <form>
            <label for="guessField" style="font-size: 18px; font-weight: bold;">Enter Your Guess:</label>
            <input type="text" id="guessField" style="margin: 10px; padding: 10px; border-radius: 10px; font-size: 18px; text-align: center;">
            <button type="submit" id="subt">Submit Guess</button>
        </form>

        <div class="resultParas">
            <p>Previous Guesses: <span class="guesses"></span></p>
            <p>Guesses Remaining: <span class="lastResult">10</span></p>
            <p class="lowOrHi" style="font-size: 20px; font-weight: bold; color: #ffeb3b;"></p>
        </div>
    </div>

    <script>
        let randomNumber = Math.floor(Math.random() * 100) + 1;
        const guessSlot = document.querySelector(".guesses");
        const remaining = document.querySelector(".lastResult");
        const startover = document.querySelector(".resultParas");
        const lowOrHi = document.querySelector(".lowOrHi");
        const submit = document.getElementById("subt");
        const userInput = document.getElementById("guessField");
        const form = document.querySelector("form");

        let prevGuess = [];
        let numGuess = 1;
        let playGame = true;

        form.addEventListener("submit", function (e) {
            e.preventDefault();
            if (playGame) {
                const guess = parseInt(userInput.value);
                validateGuess(guess);
            }
        });

        function validateGuess(guess) {
            if (isNaN(guess)) {
                alert("‚ùå Please enter a valid number");
            } else if (guess < 1 || guess > 100) {
                alert("‚ö†Ô∏è Enter a number between 1 and 100");
            } else {
                prevGuess.push(guess);
                if (numGuess === 11) {
                    displayGuess(guess);
                    displayMessage(`üíÄ Game Over! The Number was ${randomNumber}`);
                    endGame();
                } else {
                    displayGuess(guess);
                    checkGuess(guess);
                }
            }
        }

        function checkGuess(guess) {
            if (guess === randomNumber) {
                displayMessage("üéâ Congratulations! You guessed it right!");
                endGame();
            } else if (guess < randomNumber) {
                displayMessage("‚¨ÜÔ∏è Too Low! Try Again.");
            } else {
                displayMessage("‚¨áÔ∏è Too High! Try Again.");
            }
        }

        function displayGuess(guess) {
            userInput.value = "";
            guessSlot.innerHTML += ` ${guess} `;
            numGuess++;
            remaining.innerHTML = `${11 - numGuess}`;
        }

        function displayMessage(message) {
            lowOrHi.innerHTML = `<h2>${message}</h2>`;
        }

        function endGame() {
            userInput.value = "";
            userInput.setAttribute("disabled", "");
            const newGameButton = document.createElement("h2");
            newGameButton.id = "newGame";
            newGameButton.innerText = "üîÑ Play Again";
            newGameButton.addEventListener("click", restartGame);
            startover.appendChild(newGameButton);
            playGame = false;
        }

        function restartGame() {
            randomNumber = Math.floor(Math.random() * 100) + 1;
            prevGuess = [];
            numGuess = 1;
            guessSlot.innerHTML = "";
            remaining.innerHTML = "10";
            userInput.removeAttribute("disabled");
            document.getElementById("newGame").remove();
            playGame = true;
        }

        // Floating hearts and stars
        function createFloatingElement() {
            const emojiList = ["‚ù§Ô∏è", "‚≠ê", "üíñ", "‚ú®", "üå∏"];
            const floating = document.createElement("div");
            floating.innerText = emojiList[Math.floor(Math.random() * emojiList.length)];
            floating.style.position = "absolute";
            floating.style.fontSize = `${Math.random() * 30 + 20}px`;
            floating.style.opacity = "0.8";
            floating.style.left = `${Math.random() * 100}%`;
            floating.style.bottom = "-50px";
            floating.style.animation = `floatUp ${Math.random() * 5 + 3}s linear infinite`;
            document.querySelector(".floating-elements").appendChild(floating);
            setTimeout(() => floating.remove(), 8000);
        }

        setInterval(createFloatingElement, 500);
    </script>
</body>
</html>
